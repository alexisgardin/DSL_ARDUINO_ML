/*
 * generated by Xtext 2.14.0
 */
grammar InternalAML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.polytech.dsl.arduinoml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.polytech.dsl.arduinoml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.polytech.dsl.arduinoml.services.AMLGrammarAccess;

}
@parser::members {
	private AMLGrammarAccess grammarAccess;

	public void setGrammarAccess(AMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleApp
entryRuleApp
:
{ before(grammarAccess.getAppRule()); }
	 ruleApp
{ after(grammarAccess.getAppRule()); } 
	 EOF 
;

// Rule App
ruleApp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAppAccess().getGroup()); }
		(rule__App__Group__0)
		{ after(grammarAccess.getAppAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleElementCondition
entryRuleMultipleElementCondition
:
{ before(grammarAccess.getMultipleElementConditionRule()); }
	 ruleMultipleElementCondition
{ after(grammarAccess.getMultipleElementConditionRule()); } 
	 EOF 
;

// Rule MultipleElementCondition
ruleMultipleElementCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getGroup()); }
		(rule__MultipleElementCondition__Group__0)
		{ after(grammarAccess.getMultipleElementConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleElementCondition
entryRuleSingleElementCondition
:
{ before(grammarAccess.getSingleElementConditionRule()); }
	 ruleSingleElementCondition
{ after(grammarAccess.getSingleElementConditionRule()); } 
	 EOF 
;

// Rule SingleElementCondition
ruleSingleElementCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleElementConditionAccess().getGroup()); }
		(rule__SingleElementCondition__Group__0)
		{ after(grammarAccess.getSingleElementConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueElementCondition
entryRuleValueElementCondition
:
{ before(grammarAccess.getValueElementConditionRule()); }
	 ruleValueElementCondition
{ after(grammarAccess.getValueElementConditionRule()); } 
	 EOF 
;

// Rule ValueElementCondition
ruleValueElementCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueElementConditionAccess().getGroup()); }
		(rule__ValueElementCondition__Group__0)
		{ after(grammarAccess.getValueElementConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinarySensor
entryRuleBinarySensor
:
{ before(grammarAccess.getBinarySensorRule()); }
	 ruleBinarySensor
{ after(grammarAccess.getBinarySensorRule()); } 
	 EOF 
;

// Rule BinarySensor
ruleBinarySensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinarySensorAccess().getGroup()); }
		(rule__BinarySensor__Group__0)
		{ after(grammarAccess.getBinarySensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnalogSensor
entryRuleAnalogSensor
:
{ before(grammarAccess.getAnalogSensorRule()); }
	 ruleAnalogSensor
{ after(grammarAccess.getAnalogSensorRule()); } 
	 EOF 
;

// Rule AnalogSensor
ruleAnalogSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getGroup()); }
		(rule__AnalogSensor__Group__0)
		{ after(grammarAccess.getAnalogSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActuator
entryRuleActuator
:
{ before(grammarAccess.getActuatorRule()); }
	 ruleActuator
{ after(grammarAccess.getActuatorRule()); } 
	 EOF 
;

// Rule Actuator
ruleActuator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActuatorAccess().getGroup()); }
		(rule__Actuator__Group__0)
		{ after(grammarAccess.getActuatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEFloat
entryRuleEFloat
:
{ before(grammarAccess.getEFloatRule()); }
	 ruleEFloat
{ after(grammarAccess.getEFloatRule()); } 
	 EOF 
;

// Rule EFloat
ruleEFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEFloatAccess().getGroup()); }
		(rule__EFloat__Group__0)
		{ after(grammarAccess.getEFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SIGNAL
ruleSIGNAL
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIGNALAccess().getAlternatives()); }
		(rule__SIGNAL__Alternatives)
		{ after(grammarAccess.getSIGNALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OPERATOR
ruleOPERATOR
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOPERATORAccess().getAlternatives()); }
		(rule__OPERATOR__Alternatives)
		{ after(grammarAccess.getOPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COMPARATOR
ruleCOMPARATOR
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARATORAccess().getAlternatives()); }
		(rule__COMPARATOR__Alternatives)
		{ after(grammarAccess.getCOMPARATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__ConditionsAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsSingleElementConditionParserRuleCall_1_0_0()); }
		ruleSingleElementCondition
		{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsSingleElementConditionParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsValueElementConditionParserRuleCall_1_0_1()); }
		ruleValueElementCondition
		{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsValueElementConditionParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__ConditionsAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsSingleElementConditionParserRuleCall_2_1_0_0()); }
		ruleSingleElementCondition
		{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsSingleElementConditionParserRuleCall_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsValueElementConditionParserRuleCall_2_1_0_1()); }
		ruleValueElementCondition
		{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsValueElementConditionParserRuleCall_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIGNALAccess().getHIGHEnumLiteralDeclaration_0()); }
		('HIGH')
		{ after(grammarAccess.getSIGNALAccess().getHIGHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIGNALAccess().getLOWEnumLiteralDeclaration_1()); }
		('LOW')
		{ after(grammarAccess.getSIGNALAccess().getLOWEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOPERATORAccess().getAndEnumLiteralDeclaration_0()); }
		('and')
		{ after(grammarAccess.getOPERATORAccess().getAndEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORAccess().getOrEnumLiteralDeclaration_1()); }
		('or')
		{ after(grammarAccess.getOPERATORAccess().getOrEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARATORAccess().getEQUALEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getCOMPARATORAccess().getEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARATORAccess().getINFERIOREnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getCOMPARATORAccess().getINFERIOREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARATORAccess().getSUPERIOREnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getCOMPARATORAccess().getSUPERIOREnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__0__Impl
	rule__App__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getAppKeyword_0()); }
	'App'
	{ after(grammarAccess.getAppAccess().getAppKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__1__Impl
	rule__App__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getNameAssignment_1()); }
	(rule__App__NameAssignment_1)
	{ after(grammarAccess.getAppAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__2__Impl
	rule__App__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getSensorsKeyword_2()); }
	'sensors'
	{ after(grammarAccess.getAppAccess().getSensorsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__3__Impl
	rule__App__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getAppAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__4__Impl
	rule__App__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getGroup_4()); }
	(rule__App__Group_4__0)?
	{ after(grammarAccess.getAppAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__5__Impl
	rule__App__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getGroup_5()); }
	(rule__App__Group_5__0)?
	{ after(grammarAccess.getAppAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__6__Impl
	rule__App__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getActuatorsKeyword_6()); }
	'actuators'
	{ after(grammarAccess.getAppAccess().getActuatorsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__7__Impl
	rule__App__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getAppAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__8__Impl
	rule__App__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBricksAssignment_8()); }
	(rule__App__BricksAssignment_8)
	{ after(grammarAccess.getAppAccess().getBricksAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__9__Impl
	rule__App__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBricksAssignment_9()); }
	(rule__App__BricksAssignment_9)*
	{ after(grammarAccess.getAppAccess().getBricksAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__10__Impl
	rule__App__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getStatesKeyword_10()); }
	'states'
	{ after(grammarAccess.getAppAccess().getStatesKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__11__Impl
	rule__App__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getColonKeyword_11()); }
	':'
	{ after(grammarAccess.getAppAccess().getColonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__12__Impl
	rule__App__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getStatesAssignment_12()); }
	(rule__App__StatesAssignment_12)
	{ after(grammarAccess.getAppAccess().getStatesAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__13__Impl
	rule__App__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getStatesAssignment_13()); }
	(rule__App__StatesAssignment_13)*
	{ after(grammarAccess.getAppAccess().getStatesAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__14__Impl
	rule__App__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getInitialKeyword_14()); }
	'initial'
	{ after(grammarAccess.getAppAccess().getInitialKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getInitialAssignment_15()); }
	(rule__App__InitialAssignment_15)
	{ after(grammarAccess.getAppAccess().getInitialAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__App__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_4__0__Impl
	rule__App__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBinaryKeyword_4_0()); }
	'binary'
	{ after(grammarAccess.getAppAccess().getBinaryKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_4__1__Impl
	rule__App__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getAppAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_4__2__Impl
	rule__App__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBricksAssignment_4_2()); }
	(rule__App__BricksAssignment_4_2)
	{ after(grammarAccess.getAppAccess().getBricksAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBricksAssignment_4_3()); }
	(rule__App__BricksAssignment_4_3)*
	{ after(grammarAccess.getAppAccess().getBricksAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__App__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_5__0__Impl
	rule__App__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getAnalogKeyword_5_0()); }
	'analog'
	{ after(grammarAccess.getAppAccess().getAnalogKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_5__1__Impl
	rule__App__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getAppAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_5__2__Impl
	rule__App__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBricksAssignment_5_2()); }
	(rule__App__BricksAssignment_5_2)
	{ after(grammarAccess.getAppAccess().getBricksAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__App__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__App__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppAccess().getBricksAssignment_5_3()); }
	(rule__App__BricksAssignment_5_3)*
	{ after(grammarAccess.getAppAccess().getBricksAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_0()); }
	(rule__State__NameAssignment_0)
	{ after(grammarAccess.getStateAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getStateAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionsAssignment_2()); }
	(rule__State__ActionsAssignment_2)
	{ after(grammarAccess.getStateAccess().getActionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionsAssignment_3()); }
	(rule__State__ActionsAssignment_3)*
	{ after(grammarAccess.getStateAccess().getActionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTransitionAssignment_4()); }
	(rule__State__TransitionAssignment_4)
	{ after(grammarAccess.getStateAccess().getTransitionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionAction_0()); }
	()
	{ after(grammarAccess.getActionAccess().getActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_1()); }
	(rule__Action__Group_1__0)
	{ after(grammarAccess.getActionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActuatorAssignment_1_0()); }
	(rule__Action__ActuatorAssignment_1_0)
	{ after(grammarAccess.getActionAccess().getActuatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getActionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getValueAssignment_1_2()); }
	(rule__Action__ValueAssignment_1_2)
	{ after(grammarAccess.getActionAccess().getValueAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
	()
	{ after(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getTransitionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getConditionAssignment_2()); }
	(rule__Transition__ConditionAssignment_2)
	{ after(grammarAccess.getTransitionAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getNextAssignment_4()); }
	(rule__Transition__NextAssignment_4)
	{ after(grammarAccess.getTransitionAccess().getNextAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleElementCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleElementCondition__Group__0__Impl
	rule__MultipleElementCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleElementConditionAccess().getMultipleElementConditionAction_0()); }
	()
	{ after(grammarAccess.getMultipleElementConditionAccess().getMultipleElementConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleElementCondition__Group__1__Impl
	rule__MultipleElementCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsAssignment_1()); }
	(rule__MultipleElementCondition__ConditionsAssignment_1)
	{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleElementCondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleElementConditionAccess().getGroup_2()); }
	(rule__MultipleElementCondition__Group_2__0)*
	{ after(grammarAccess.getMultipleElementConditionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleElementCondition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleElementCondition__Group_2__0__Impl
	rule__MultipleElementCondition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleElementConditionAccess().getOperatorsAssignment_2_0()); }
	(rule__MultipleElementCondition__OperatorsAssignment_2_0)
	{ after(grammarAccess.getMultipleElementConditionAccess().getOperatorsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleElementCondition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsAssignment_2_1()); }
	(rule__MultipleElementCondition__ConditionsAssignment_2_1)
	{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleElementCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleElementCondition__Group__0__Impl
	rule__SingleElementCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleElementConditionAccess().getSingleElementConditionAction_0()); }
	()
	{ after(grammarAccess.getSingleElementConditionAccess().getSingleElementConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleElementCondition__Group__1__Impl
	rule__SingleElementCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleElementConditionAccess().getSensorAssignment_1()); }
	(rule__SingleElementCondition__SensorAssignment_1)
	{ after(grammarAccess.getSingleElementConditionAccess().getSensorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleElementCondition__Group__2__Impl
	rule__SingleElementCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleElementConditionAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getSingleElementConditionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleElementCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleElementConditionAccess().getValueAssignment_3()); }
	(rule__SingleElementCondition__ValueAssignment_3)
	{ after(grammarAccess.getSingleElementConditionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueElementCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueElementCondition__Group__0__Impl
	rule__ValueElementCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueElementConditionAccess().getValueElementConditionAction_0()); }
	()
	{ after(grammarAccess.getValueElementConditionAccess().getValueElementConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueElementCondition__Group__1__Impl
	rule__ValueElementCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueElementConditionAccess().getSensorAssignment_1()); }
	(rule__ValueElementCondition__SensorAssignment_1)
	{ after(grammarAccess.getValueElementConditionAccess().getSensorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueElementCondition__Group__2__Impl
	rule__ValueElementCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueElementConditionAccess().getComparatorAssignment_2()); }
	(rule__ValueElementCondition__ComparatorAssignment_2)
	{ after(grammarAccess.getValueElementConditionAccess().getComparatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueElementCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueElementConditionAccess().getValueAssignment_3()); }
	(rule__ValueElementCondition__ValueAssignment_3)
	{ after(grammarAccess.getValueElementConditionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinarySensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySensor__Group__0__Impl
	rule__BinarySensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySensorAccess().getBinarySensorAction_0()); }
	()
	{ after(grammarAccess.getBinarySensorAccess().getBinarySensorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySensor__Group__1__Impl
	rule__BinarySensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySensorAccess().getNameAssignment_1()); }
	(rule__BinarySensor__NameAssignment_1)
	{ after(grammarAccess.getBinarySensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySensor__Group__2__Impl
	rule__BinarySensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySensorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getBinarySensorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinarySensor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinarySensorAccess().getPinAssignment_3()); }
	(rule__BinarySensor__PinAssignment_3)
	{ after(grammarAccess.getBinarySensorAccess().getPinAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnalogSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__0__Impl
	rule__AnalogSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getAnalogSensorAction_0()); }
	()
	{ after(grammarAccess.getAnalogSensorAccess().getAnalogSensorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__1__Impl
	rule__AnalogSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getNameAssignment_1()); }
	(rule__AnalogSensor__NameAssignment_1)
	{ after(grammarAccess.getAnalogSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__2__Impl
	rule__AnalogSensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getAnalogSensorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getPinAssignment_3()); }
	(rule__AnalogSensor__PinAssignment_3)
	{ after(grammarAccess.getAnalogSensorAccess().getPinAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__0__Impl
	rule__Actuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorAction_0()); }
	()
	{ after(grammarAccess.getActuatorAccess().getActuatorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__1__Impl
	rule__Actuator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getNameAssignment_1()); }
	(rule__Actuator__NameAssignment_1)
	{ after(grammarAccess.getActuatorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__2__Impl
	rule__Actuator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getActuatorAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getPinAssignment_3()); }
	(rule__Actuator__PinAssignment_3)
	{ after(grammarAccess.getActuatorAccess().getPinAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__0__Impl
	rule__EFloat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getGroup_1()); }
	(rule__EFloat__Group_1__0)?
	{ after(grammarAccess.getEFloatAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_1__0__Impl
	rule__EFloat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getEFloatAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1_1()); }
		(RULE_INT)
		{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1_1()); }
	)
	(
		{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1_1()); }
		(RULE_INT)*
		{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__App__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getAppAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__BricksAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getBricksBinarySensorParserRuleCall_4_2_0()); }
		ruleBinarySensor
		{ after(grammarAccess.getAppAccess().getBricksBinarySensorParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__BricksAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getBricksBinarySensorParserRuleCall_4_3_0()); }
		ruleBinarySensor
		{ after(grammarAccess.getAppAccess().getBricksBinarySensorParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__BricksAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getBricksAnalogSensorParserRuleCall_5_2_0()); }
		ruleAnalogSensor
		{ after(grammarAccess.getAppAccess().getBricksAnalogSensorParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__BricksAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getBricksAnalogSensorParserRuleCall_5_3_0()); }
		ruleAnalogSensor
		{ after(grammarAccess.getAppAccess().getBricksAnalogSensorParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__BricksAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getBricksActuatorParserRuleCall_8_0()); }
		ruleActuator
		{ after(grammarAccess.getAppAccess().getBricksActuatorParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__BricksAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getBricksActuatorParserRuleCall_9_0()); }
		ruleActuator
		{ after(grammarAccess.getAppAccess().getBricksActuatorParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__StatesAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getStatesStateParserRuleCall_12_0()); }
		ruleState
		{ after(grammarAccess.getAppAccess().getStatesStateParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__StatesAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getStatesStateParserRuleCall_13_0()); }
		ruleState
		{ after(grammarAccess.getAppAccess().getStatesStateParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__App__InitialAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppAccess().getInitialStateCrossReference_15_0()); }
		(
			{ before(grammarAccess.getAppAccess().getInitialStateEStringParserRuleCall_15_0_1()); }
			ruleEString
			{ after(grammarAccess.getAppAccess().getInitialStateEStringParserRuleCall_15_0_1()); }
		)
		{ after(grammarAccess.getAppAccess().getInitialStateCrossReference_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getStateAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionsActionParserRuleCall_2_0()); }
		ruleAction
		{ after(grammarAccess.getStateAccess().getActionsActionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionsActionParserRuleCall_3_0()); }
		ruleAction
		{ after(grammarAccess.getStateAccess().getActionsActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTransitionTransitionParserRuleCall_4_0()); }
		ruleTransition
		{ after(grammarAccess.getStateAccess().getTransitionTransitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActuatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActuatorActuatorCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getActionAccess().getActuatorActuatorEStringParserRuleCall_1_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getActionAccess().getActuatorActuatorEStringParserRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getActionAccess().getActuatorActuatorCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ValueAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getValueSIGNALEnumRuleCall_1_2_0()); }
		ruleSIGNAL
		{ after(grammarAccess.getActionAccess().getValueSIGNALEnumRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getConditionMultipleElementConditionParserRuleCall_2_0()); }
		ruleMultipleElementCondition
		{ after(grammarAccess.getTransitionAccess().getConditionMultipleElementConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NextAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getNextStateCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getNextStateEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransitionAccess().getNextStateEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getNextStateCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__ConditionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsAlternatives_1_0()); }
		(rule__MultipleElementCondition__ConditionsAlternatives_1_0)
		{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__OperatorsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getOperatorsOPERATOREnumRuleCall_2_0_0()); }
		ruleOPERATOR
		{ after(grammarAccess.getMultipleElementConditionAccess().getOperatorsOPERATOREnumRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleElementCondition__ConditionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleElementConditionAccess().getConditionsAlternatives_2_1_0()); }
		(rule__MultipleElementCondition__ConditionsAlternatives_2_1_0)
		{ after(grammarAccess.getMultipleElementConditionAccess().getConditionsAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__SensorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleElementConditionAccess().getSensorBinarySensorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSingleElementConditionAccess().getSensorBinarySensorEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getSingleElementConditionAccess().getSensorBinarySensorEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSingleElementConditionAccess().getSensorBinarySensorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElementCondition__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleElementConditionAccess().getValueSIGNALEnumRuleCall_3_0()); }
		ruleSIGNAL
		{ after(grammarAccess.getSingleElementConditionAccess().getValueSIGNALEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__SensorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueElementConditionAccess().getSensorAnalogSensorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getValueElementConditionAccess().getSensorAnalogSensorEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getValueElementConditionAccess().getSensorAnalogSensorEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getValueElementConditionAccess().getSensorAnalogSensorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__ComparatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueElementConditionAccess().getComparatorCOMPARATOREnumRuleCall_2_0()); }
		ruleCOMPARATOR
		{ after(grammarAccess.getValueElementConditionAccess().getComparatorCOMPARATOREnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueElementCondition__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueElementConditionAccess().getValueEFloatParserRuleCall_3_0()); }
		ruleEFloat
		{ after(grammarAccess.getValueElementConditionAccess().getValueEFloatParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinarySensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getBinarySensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinarySensor__PinAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinarySensorAccess().getPinEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getBinarySensorAccess().getPinEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getAnalogSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__PinAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getPinEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getAnalogSensorAccess().getPinEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getActuatorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__PinAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getPinEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getActuatorAccess().getPinEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
